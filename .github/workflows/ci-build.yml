name: Build Package

on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    name: ${{ matrix.os }} / pip / ${{ matrix.qt }} / pyvista-${{ matrix.pyvista }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9

      - name: Build package
        run: |
          python setup.py sdist
  
      - name: lint package
        run: |
          pip install twine
          twine check dist/*

      - name: Install package
        run: |
          pip install dist/*.tar.gz --disable-pip-version-check

      - name: Unit testing
        run: |
          pip install -r requirements_tests.txt --disable-pip-version-check
          pytest -v

      - name: Upload to PyPi
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          pip install twine
          twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}

  conda:
    name: Conda build and publish
    runs-on: 'ubuntu-latest'
    # needs: ci

    defaults:
      run:
        shell: bash

    steps: 
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9

      - name: Installing Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: test
          auto-update-conda: true

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Installing Conda-build
        run: |
          echo 'Test'
          conda install conda-build

      - name: Installing Anaconda-client
        run: conda install anaconda-client

      - name: Getting the skeleton
        run: conda skeleton pypi ansys-tools-protos-generator

      - name: Installing compilers
        run: |
          echo "Installing ..."
          sudo apt update
          sudo apt install build-essential
          echo "==="
          gcc --version
          echo "==="

      - name: Building Conda packages
        run: |
          conda config --set anaconda_upload no
          mkdir OUTPUT_FOLDER
          conda build . --no-test --output-folder OUTPUT_FOLDER
        # --quiet --no-test --token ge-a3eed621-bdc7-4c6c-85ea-f6257fc6b800 #${{ secrets.ANACONDA_TOKEN }} --skip-existing --no-test --output-folder OUTPUT_FOLDER 

      - name: Upload Conda packages
        run: |
          anaconda login --username german.ayuso --password GgW_W3mUR4VzdAF
          anaconda upload OUTPUT_FOLDER/*.tar.bz2